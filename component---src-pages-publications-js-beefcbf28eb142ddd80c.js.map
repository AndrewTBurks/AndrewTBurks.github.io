{"version":3,"sources":["webpack:///./src/components/PubEntry/index.jsx","webpack:///./src/pages/publications.js"],"names":["PubEntry","_ref","award","teamBefore","teamAfter","name","journal","_objectWithoutPropertiesLoose","react_default","a","createElement","className","style","color","index_esm","PubsPage","dataJson","_320076498","data","conference","poster","layout","seo","title","maxWidth","marginBottom","padding","map","pub","i","components_PubEntry","Object","assign","key"],"mappings":"8NA6BeA,MAtBf,SAAAC,GAA6E,IAAzDC,EAAyDD,EAAzDC,MAAOC,EAAkDF,EAAlDE,WAAYC,EAAsCH,EAAtCG,UAAWC,EAA2BJ,EAA3BI,KAAMC,EAAqBL,EAArBK,QACtD,kIAD2EC,CAAAN,EAAA,qDAEzEO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAAEC,MAAO,gBACvCX,GACAM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASD,MAAM,kBADjB,IACqCX,IAGrC,KACFM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaN,GAC5BG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASD,MAAM,gBADjB,IACmCV,EAAY,IAC7CK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAf,YACCP,GAEHI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAUD,MAAM,gBADlB,IACoCP,KC6D3BS,UAzEE,WAAM,IACfC,EADeC,EAAAC,KACfF,SA8BJG,EAGEH,EAHFG,WACAb,EAEEU,EAFFV,QACAc,EACEJ,EADFI,OAGF,OAAOZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACLb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKC,MAAM,iBACXf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,MAAO,CAC5BY,SAAQ,OACRC,aAAY,UACZC,QAAS,KAETlB,EAAAC,EAAAC,cAAA,+BACCS,EAAWQ,IAAI,SAACC,EAAKC,GAAN,OACdrB,EAAAC,EAAAC,cAACoB,EAADC,OAAAC,OAAA,CAAUC,IAAKJ,GAAOD,MAGxBpB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACCJ,EAAQqB,IAAI,SAACC,EAAKC,GAAN,OACXrB,EAAAC,EAAAC,cAACoB,EAADC,OAAAC,OAAA,CAAUC,IAAKJ,GAAOD,MAGxBpB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,+CACCU,EAAOO,IAAI,SAACC,EAAKC,GAAN,OACVrB,EAAAC,EAAAC,cAACoB,EAADC,OAAAC,OAAA,CAAUC,IAAKJ,GAAOD","file":"component---src-pages-publications-js-beefcbf28eb142ddd80c.js","sourcesContent":["import React from \"react\";\n\nimport \"./pub.scss\";\n\nimport { FaAward, FaUsers, FaMapPin } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\n\nfunction PubEntry({ award, teamBefore, teamAfter, name, journal, ...props }) {\n  return (\n    <div className=\"pub-entry\" style={{ color: \"var(--text)\" }}>\n      {(award && (\n        <div className=\"pub-award\">\n          <FaAward color=\"var(--accent)\" /> {award}\n        </div>\n      )) ||\n        null}\n      <div className=\"pub-title\">{name}</div>\n      <div className=\"pub-authors\">\n        <FaUsers color=\"var(--link)\" /> {teamBefore}{\" \"}\n        <div className=\"me\">A. Burks</div>\n        {teamAfter}\n      </div>\n      <div className=\"pub-venue\">\n        <FaMapPin color=\"var(--link)\" /> {journal}\n      </div>\n    </div>\n  );\n}\n\nexport default PubEntry;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\"\nimport Image from \"../components/profile-image\"\nimport SEO from \"../components/seo\"\n\nimport PubEntry from \"../components/PubEntry\"\n\nconst PubsPage = () => {\n  let { dataJson } = useStaticQuery(\n  graphql`\n    query {\n      dataJson {\n        conference {\n          award\n          teamBefore\n          teamAfter\n          name\n          journal\n        }\n        journal {\n          award\n          journal\n          name\n          teamAfter\n          teamBefore\n        }\n        poster {\n          award\n          journal\n          name\n          teamAfter\n          teamBefore\n        }\n      }\n    }\n  `);\n\n  let {\n    conference,\n    journal,\n    poster\n  } = dataJson;\n\n  return <Layout>\n    <SEO title=\"Publications\" />\n    <div className=\"panel\" style={{\n      maxWidth: `100%`,\n      marginBottom: `1.45rem`,\n      padding: 20\n    }}>\n      <h3>Conference Papers</h3>\n      {conference.map((pub, i) => (\n        <PubEntry key={i} {...pub}/>\n        // null\n      ))}\n      <hr />\n      <h3>Journal Articles</h3>\n      {journal.map((pub, i) => (\n        <PubEntry key={i} {...pub} />\n        // null\n      ))}\n      <hr />\n      <h3>Short Papers, Posters & Abstracts</h3>\n      {poster.map((pub, i) => (\n        <PubEntry key={i} {...pub} />\n        // null\n      ))}\n\n      {/* {data.allMarkdownRemark.edges.map(edge => {\n        let { date, path, title } = edge.node.frontmatter;\n        return <div key={edge.node.id} style={{margin: \"5px\"}}>\n          <Link key={edge.node.id} to={path}>\n            {title}\n          </Link>\n        </div>\n      })} */}\n    </div>\n  </Layout>\n}\n\nexport default PubsPage\n"],"sourceRoot":""}