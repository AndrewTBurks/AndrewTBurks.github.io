{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/menu.jsx","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","PAGES","link","Menu","_useContext","useContext","ThemeContext","theme","setTheme","react_default","className","style","marginLeft","esm","Provider","value","size","index_esm","map","key","gatsby_browser_entry","margin","to","Array","fill","i","border","background","color","padding","fontWeight","onClick","Header","siteTitle","borderBottom","marginBottom","maxWidth","display","flexDirection","alignItems","textDecoration","menu","defaultProps","Layout","children","scheme","data","_856328897","components_header","site","siteMetadata","paddingTop","Date","getFullYear","href","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"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","file":"component---src-pages-404-js-f5bf1ac573038af1671c.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React, {useContext} from 'react';\nimport { Link } from 'gatsby';\n\nimport { IconContext } from 'react-icons';\nimport { FaHamburger } from 'react-icons/fa';\n\nimport { ThemeContext } from './theme-context';\n\nconst PAGES = [\n  {\n    title: \"Home\",\n    link: \"/\"\n  },\n  {\n    title: \"Projects\",\n    link: \"/projects\"\n  },\n  {\n    title: \"Publications\",\n    link: \"/publications\"\n  },\n  {\n    title: \"Blog\",\n    link: \"/blog\"\n  }\n]\n\nfunction Menu() {\n  let { theme, setTheme } = useContext(ThemeContext);\n\n  return <button className={`menu`} style={{marginLeft: \"auto\"}}>\n    <IconContext.Provider value={{className: `menuIcon`, size: `2em`}}>\n      <FaHamburger />\n    </IconContext.Provider>\n    <div className=\"menu-options\">\n      {PAGES.map(({title, link}) => (\n        <div className=\"menu-opt\" key={link} >\n          <Link style={{margin: \"-5px\"}} to={link}>{title}</Link>\n        </div>\n      ))}\n      <div className=\"menu-opt\">\n        {new Array(2).fill(0).map((d, i) => {\n          return <span className={`scheme${i + 1}`} key={i}>\n            <span style={{\n              border: \"2px solid var(--sec)\",\n              background: \"var(--prim)\",\n              color: \"var(--text)\",\n              padding: \"5px\",\n              margin: \"5px\",\n              fontWeight: theme === i + 1 ? \"bold\" : \"normal\"\n            }} onClick={() => setTheme(i + 1)}>\n              Aa\n            </span>\n          </span>\n        })}\n        {/* <span style={{\n          border: \"1px solid black\",\n          padding: \"5px\",\n          margin: \"5px\"\n        }} onClick={() => setTheme(2)}>\n          2\n        </span> */}\n        {/* change theme */}\n      </div>\n      {/* <div className=\"menu-opt\">\n        Lol\n      </div> */}\n    </div>\n  </button>\n}\n\nexport default Menu;","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport Menu from \"./menu\";\nimport './header.scss';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `var(--prim)`,\n      borderBottom: `4px solid var(--sec-d)`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      className='header-wrapper'\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        display: `flex`,\n        flexDirection: `row`,\n        alignItems: `stretch`\n      }}\n    >\n      <h1 style={{ margin: `1.45rem 1.0875rem`, }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `inherit`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n\n      <Menu />\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useContext } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport { ThemeContext } from './theme-context';\nimport Header from \"./header\"\nimport \"./layout.scss\";\nimport \"./_colors.scss\";\n\nconst Layout = ({ children, scheme }) => {\n  let { theme } = useContext(ThemeContext);\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div\n        className={`scheme${theme || scheme || 1}`}>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}