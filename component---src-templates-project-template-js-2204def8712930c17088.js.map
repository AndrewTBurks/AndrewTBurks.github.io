{"version":3,"sources":["webpack:///./src/templates/projectTemplate.js"],"names":["buttonStyle","_buttonStyle","color","textDecoration","fontWeight","display","alignItems","whiteSpace","padding","buttonMap","github","Icon","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","framer_motion__WEBPACK_IMPORTED_MODULE_9__","href","target","style","react_icons_fa__WEBPACK_IMPORTED_MODULE_15__","link","paper","Template","_ref","mdx","data","frontmatter","body","_components_layout__WEBPACK_IMPORTED_MODULE_10__","_components_seo__WEBPACK_IMPORTED_MODULE_11__","title","shorttitle","className","date","fontSize","Object","keys","filter","map","attr","assign","key","award","marginLeft","paddingLeft","borderLeft","abstract","featuredImage","gatsby_image__WEBPACK_IMPORTED_MODULE_7___default","fluid","childImageSharp","gatsby_plugin_mdx__WEBPACK_IMPORTED_MODULE_8__","pageQuery"],"mappings":"gUAeMA,IAAWC,EAAA,CACfC,MAAO,YADQ,MAER,cAFQD,EAGfE,eAAgB,OAHDF,EAIfG,WAAY,IAJGH,EAKfI,QAAS,cALMJ,EAMfK,WAAY,SANGL,EAOfM,WAAY,MAPGN,EAQfO,QAAS,EARMP,GAYXQ,EAAY,CAChBC,OAAQ,CACNC,KAAM,SAAAC,GAAK,OACTC,EAAAC,EAAAC,cAACC,EAAA,EAAOF,EAAR,CAAUG,KAAML,EAAMF,OAAQQ,OAAO,SAASC,MAAOnB,GACnDa,EAAAC,EAAAC,cAACK,EAAA,EAAD,SAINC,KAAM,CACJV,KAAM,SAAAC,GAAK,OACTC,EAAAC,EAAAC,cAACC,EAAA,EAAOF,EAAR,CAAUG,KAAML,EAAMS,KAAMH,OAAO,SAASC,MAAOnB,GACjDa,EAAAC,EAAAC,cAACK,EAAA,EAAD,SAINE,MAAO,CACLX,KAAM,SAAAC,GAAK,OACTC,EAAAC,EAAAC,cAACC,EAAA,EAAOF,EAAR,CAAUG,KAAML,EAAMU,MAAOJ,OAAO,SAASC,MAAOnB,GAClDa,EAAAC,EAAAC,cAACK,EAAA,EAAD,UAMO,SAASG,EAATC,GAEZ,IACOC,EADPD,EADDE,KAEQD,IACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACEf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAKC,MAAOJ,EAAYK,aACxBnB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,4BAA4Bd,MAAO,CAAEX,QAAS,KAC3DK,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,aACbpB,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEjB,MAAO,gBAAkByB,EAAYI,OAClDlB,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEf,WAAY,YAAcuB,EAAYO,MACnDrB,EAAAC,EAAAC,cAAA,OACEI,MAAO,CAAEgB,SAAU,SAAUjC,MAAO,kBAAmBM,QAAS,IAE/D4B,OAAOC,KAAK5B,GACV6B,OAAO,SAAAxB,GAAC,OAAIa,EAAYb,KACxByB,IAAI,SAAAC,GAAQ,IACL7B,EAASF,EAAU+B,GAAnB7B,KAEN,OAAOE,EAAAC,EAAAC,cAACJ,EAADyB,OAAAK,OAAA,CAAMC,IAAKF,GAAUb,OAGlCd,EAAAC,EAAAC,cAAA,WACCY,EAAYgB,QAET9B,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEjB,MAAO,gBAAiBE,WAAY,MAC/CS,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASe,SAAU,eADrB,IACuCR,EAAYgB,QAGnD,MACJ9B,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,KACEI,MAAO,CACLyB,WAAY,EACZC,YAAa,GACbC,WAAY,4BAGbnB,EAAYoB,UAEbpB,EAAYqB,eACZnC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,CAAKoC,MAAOvB,EAAYqB,cAAcG,gBAAgBD,SAEtD,KACFrC,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,qBACbpB,EAAAC,EAAAC,cAACqC,EAAA,YAAD,KAAcxB,OAOnB,IAAMyB,EAAS","file":"component---src-templates-project-template-js-2204def8712930c17088.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\n\nimport { motion } from \"framer-motion\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport \"./md.scss\";\nimport \"../fontawesome/all.js\";\nimport \"../fontawesome/all.css\";\nimport { FaAward, FaCode, FaLink, FaFilePdf } from \"react-icons/fa\";\n\nconst buttonStyle = {\n  color: \"inherit\",\n  color: \"var(--link)\",\n  textDecoration: \"none\",\n  fontWeight: 300,\n  display: \"lnline-flex\",\n  alignItems: \"center\",\n  whiteSpace: \"pre\",\n  padding: 4,\n  // margin: \"0 8px\",\n};\n\nconst buttonMap = {\n  github: {\n    Icon: props => (\n      <motion.a href={props.github} target=\"_blank\" style={buttonStyle}>\n        <FaCode />\n      </motion.a>\n    ),\n  },\n  link: {\n    Icon: props => (\n      <motion.a href={props.link} target=\"_blank\" style={buttonStyle}>\n        <FaLink />\n      </motion.a>\n    ),\n  },\n  paper: {\n    Icon: props => (\n      <motion.a href={props.paper} target=\"_blank\" style={buttonStyle}>\n        <FaFilePdf />\n      </motion.a>\n    ),\n  },\n};\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { mdx } = data; // data.markdownRemark holds our post data\n  const { frontmatter, body } = mdx;\n\n  return (\n    <Layout>\n      <SEO title={frontmatter.shorttitle} />\n      <div className=\"blog-post-container panel\" style={{ padding: 20 }}>\n        <div className=\"blog-post\">\n          <h1 style={{ color: \"var(--text)\" }}>{frontmatter.title}</h1>\n          <h4 style={{ fontWeight: \"lighter\" }}>{frontmatter.date}</h4>\n          <div\n            style={{ fontSize: \"1.4rem\", color: \"var(--text-sec)\", padding: 4 }}\n          >\n            {Object.keys(buttonMap)\n              .filter(a => frontmatter[a])\n              .map(attr => {\n                let { Icon } = buttonMap[attr];\n\n                return <Icon key={attr} {...frontmatter} />;\n              })}\n          </div>\n          <hr />\n          {frontmatter.award &&\n            ((\n              <h3 style={{ color: \"var(--accent)\", fontWeight: 300 }}>\n                <FaAward fontSize={\"1.38316rem\"} /> {frontmatter.award}\n              </h3>\n            ) ||\n              null)}\n          <h4>Abstract:</h4>\n          <p\n            style={{\n              marginLeft: 8,\n              paddingLeft: 12,\n              borderLeft: \"1px solid var(--accent)\",\n            }}\n          >\n            {frontmatter.abstract}\n          </p>\n          {(frontmatter.featuredImage && (\n            <Img fluid={frontmatter.featuredImage.childImageSharp.fluid} />\n          )) ||\n            null}\n          <div className=\"blog-post-content\">\n            <MDXRenderer>{body}</MDXRenderer>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query($path: String!) {\n    mdx(frontmatter: { path: { eq: $path } }) {\n      body\n      excerpt(pruneLength: 250)\n      timeToRead\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        shorttitle\n        abstract\n        award\n        link\n        github\n        paper\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}