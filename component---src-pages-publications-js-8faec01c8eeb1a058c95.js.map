{"version":3,"sources":["webpack:///./src/components/PubEntry/index.jsx","webpack:///./src/pages/publications.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/index.jsx","webpack:///./src/components/layout.js"],"names":["PubEntry","_ref","award","teamBefore","teamAfter","name","journal","_objectWithoutPropertiesLoose","react_default","a","createElement","className","style","color","index_esm","pageQuery","PubsPage","props","_staticQueryData$data","_3281685520","data","dataJson","file","conference","poster","imgurl","publicURL","layout","seo","title","imageurl","description","maxWidth","marginBottom","padding","map","pub","i","components_PubEntry","Object","assign","key","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","Header","siteTitle","_useContext","location","useContext","ThemeContext","theme","setTheme","switchOn","_useReducer","useReducer","prevState","_ref2","action","hidden","dispatch","useEffect","scrollListener","window","scrollY","addEventListener","removeEventListener","styles","useSpring","opacity","web","header","onMouseOver","div","_objectSpread","margin","display","gatsby_browser_entry","to","textDecoration","background","marginLeft","borderRadius","alignItems","marginRight","textAlign","class","type","onChange","evt","target","checked","framer_motion_es","span","animate","x","Layout","children","scheme","_856328897","components_header","paddingTop","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-publications-js-8faec01c8eeb1a058c95.js","sourcesContent":["import React from \"react\";\n\nimport \"./pub.scss\";\n\nimport { FaAward, FaUsers, FaMapPin } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\n\nfunction PubEntry({ award, teamBefore, teamAfter, name, journal, ...props }) {\n  return (\n    <div className=\"pub-entry\" style={{ color: \"var(--text)\" }}>\n      {(award && (\n        <div className=\"pub-award\">\n          <FaAward color=\"var(--accent)\" /> {award}\n        </div>\n      )) ||\n        null}\n      <div className=\"pub-title\">{name}</div>\n      <div className=\"pub-authors\">\n        <FaUsers color=\"var(--link)\" /> {teamBefore}{\" \"}\n        <div className=\"me\">A. Burks</div>\n        {teamAfter}\n      </div>\n      <div className=\"pub-venue\">\n        <FaMapPin color=\"var(--link)\" /> {journal}\n      </div>\n    </div>\n  );\n}\n\nexport default PubEntry;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport PubEntry from \"../components/PubEntry\";\n\nconst PubsPage = props => {\n  let { dataJson, file } = useStaticQuery(\n    graphql`\n      query {\n        file(relativePath: { eq: \"Profile.jpg\" }) {\n          publicURL\n        }\n        dataJson {\n          conference {\n            award\n            teamBefore\n            teamAfter\n            name\n            journal\n          }\n          journal {\n            award\n            journal\n            name\n            teamAfter\n            teamBefore\n          }\n          poster {\n            award\n            journal\n            name\n            teamAfter\n            teamBefore\n          }\n        }\n      }\n    `\n  );\n\n  let { conference, journal, poster } = dataJson;\n  let imgurl = file.publicURL;\n\n  return (\n    <Layout>\n      <SEO\n        title='Publications'\n        imageurl={imgurl}\n        description={\"Papers I have written and pubished\"}\n      />\n      <div\n        className='panel'\n        style={{\n          maxWidth: `100%`,\n          marginBottom: `1.45rem`,\n          padding: 20,\n        }}\n      >\n        <h3>Conference Papers</h3>\n        {conference.map((pub, i) => (\n          <PubEntry key={i} {...pub} />\n          // null\n        ))}\n        <hr />\n        <h3>Journal Articles</h3>\n        {journal.map((pub, i) => (\n          <PubEntry key={i} {...pub} />\n          // null\n        ))}\n        <hr />\n        <h3>Short Papers, Posters & Abstracts</h3>\n        {poster.map((pub, i) => (\n          <PubEntry key={i} {...pub} />\n          // null\n        ))}\n\n        {/* {data.allMarkdownRemark.edges.map(edge => {\n        let { date, path, title } = edge.node.frontmatter;\n        return <div key={edge.node.id} style={{margin: \"5px\"}}>\n          <Link key={edge.node.id} to={path}>\n            {title}\n          </Link>\n        </div>\n      })} */}\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    file(relativePath: { eq: \"Profile.jpg\" }) {\n      publicURL\n    }\n  }\n`;\n\nexport default PubsPage;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title, imageurl }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          name: \"image\",\n          content: imageurl,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: \"og:image\",\n          content: imageurl,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n        {\n          name: \"twitter:image\",\n          content: imageurl,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n  imageurl: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link, navigate } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useReducer, useEffect, useContext } from \"react\";\n\nimport { useSpring, animated } from \"react-spring\";\nimport { motion } from \"framer-motion\";\n\nimport {\n  FaHome,\n  FaScroll,\n  FaLaptopCode,\n  FaLinkedin,\n  FaGithub,\n  FaTwitter,\n  FaLightbulb,\n} from \"react-icons/fa\";\n\nimport \"./header.scss\";\n\nimport { ThemeContext } from \"../theme-context\";\n\nconst Header = ({ siteTitle, location }) => {\n  let { theme, setTheme } = useContext(ThemeContext);\n\n  const switchOn = theme === 4;\n\n  let [hidden, dispatch] = useReducer((prevState, { action }) => {\n    if (action === \"show\") {\n      return false;\n    } else if (action === \"hide\") {\n      return true;\n    }\n\n    return false;\n  }, false);\n\n  useEffect(() => {\n    let scrollListener = () => {\n      if (window.scrollY < 100) {\n        dispatch({ action: \"show\" });\n      } else if (window.scrollY > 100) {\n        dispatch({ action: \"hide\" });\n      }\n    };\n\n    window.addEventListener(\"scroll\", scrollListener);\n\n    return () => window.removeEventListener(\"scroll\", scrollListener);\n  }, []);\n\n  let styles = useSpring({\n    opacity: hidden ? 0 : 1,\n  });\n\n  return (\n    <animated.header onMouseOver={() => dispatch({ action: \"show\" })}>\n      <div className='header-wrapper'>\n        <animated.div\n          className='hiding'\n          style={{\n            ...styles,\n          }}\n        >\n          <div\n            style={\n              {\n                // width: \"50%\"\n              }\n            }\n          >\n            <h2\n              style={{\n                margin: `1.45rem 1.0875rem`,\n                display: \"flex\",\n              }}\n            >\n              <Link\n                to='/'\n                style={{\n                  color: `inherit`,\n                  textDecoration: `none`,\n                  background: \"var(--background)\",\n                  padding: 18,\n                  marginLeft: 10,\n                  borderRadius: 100,\n                }}\n              >\n                {siteTitle}\n              </Link>\n\n              <div\n                style={{\n                  display: \"inline-flex\",\n                  alignItems: \"center\",\n                  marginRight: \"1.25rem\",\n                  textAlign: \"right\",\n                  // padding: \".25rem\",\n                  marginLeft: \"auto\",\n                  background: \"var(--background)\",\n                  borderRadius: 20,\n                  padding: 10,\n                }}\n              >\n                <FaLightbulb style={{ marginRight: 4 }} color='var(--link)' />\n                <label class='switch'>\n                  <input\n                    type='checkbox'\n                    onChange={evt => setTheme(evt.target.checked ? 4 : 3)}\n                  />\n                  <span class='slider round'>\n                    <motion.span\n                      class='dot'\n                      animate={{\n                        x: switchOn ? 16 : 0,\n                      }}\n                    />\n                  </span>\n                </label>\n              </div>\n            </h2>\n          </div>\n        </animated.div>\n\n        {/* <button\n          onClick={() => setTheme(t => (t === 3 ? 4 : 3))}\n          style={{ zIndex: 10, margin: \"auto 0\" }}\n        >\n          Theme\n        </button> */}\n      </div>\n    </animated.header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport { ThemeContext } from \"./theme-context\";\nimport Header from \"./header\";\nimport \"./layout.scss\";\nimport \"./_colors.scss\";\n\nconst Layout = ({ children, scheme, ...props }) => {\n  let { theme } = useContext(ThemeContext);\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className={`scheme${theme}`}>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `100px auto 0`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href='https://www.gatsbyjs.org'>Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}