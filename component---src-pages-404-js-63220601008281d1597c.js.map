{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js","webpack:///./src/components/header/index.jsx","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","FaHome","FaLaptopCode","FaScroll","FaLinkedin","FaGithub","FaTwitter","Header","siteTitle","_useContext","location","useContext","ThemeContext","setTheme","theme","_useReducer","useReducer","prevState","_ref2","action","hidden","dispatch","useEffect","scrollListener","window","scrollY","addEventListener","removeEventListener","styles","useSpring","opacity","react_default","web","header","onMouseOver","className","div","style","header_objectSpread","margin","gatsby_browser_entry","to","color","textDecoration","background","padding","marginLeft","borderRadius","onClick","t","zIndex","Layout","children","scheme","layout_objectWithoutPropertiesLoose","_856328897","components_header","maxWidth","paddingTop","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-404-js-63220601008281d1597c.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link, navigate } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport React, { useReducer, useEffect, useContext } from \"react\";\n\nimport { useSpring, animated } from \"react-spring\";\n\nimport { globalHistory } from \"@reach/router\";\n\nimport { IconContext } from \"react-icons\";\nimport {\n  FaPalette,\n  FaSwatchbook,\n  FaHamburger,\n  FaHome,\n  FaScroll,\n  FaLaptopCode,\n  FaBlog,\n  FaBriefcase,\n  FaAward,\n  FaLinkedin,\n  FaGithub,\n  FaTwitter,\n} from \"react-icons/fa\";\n\n// import Menu from \"../menu/menu-old\";\n\nimport \"./header.scss\";\nimport RadialMenu from \"../menu\";\n\nimport { ThemeContext } from \"../theme-context\";\n\nconst NUM_SCHEMES = 4;\nconst PAGES = [\n  {\n    Icon: FaHome,\n    title: \"Home\",\n    link: \"/\",\n  },\n  // {\n  //   Icon: FaBriefcase,\n  //   title: \"Experience\",\n  //   link: \"/experience\"\n  // },\n  // {\n  //   Icon: FaAward,\n  //   title: \"Awards\",\n  //   link: \"/awards\"\n  // },\n  {\n    Icon: FaLaptopCode,\n    title: \"Projects\",\n    link: \"/projects\",\n  },\n  {\n    Icon: FaScroll,\n    title: \"Publications\",\n    link: \"/publications\",\n  },\n  {\n    Icon: FaLinkedin,\n    title: \"LinkedIn\",\n    link: \"https://www.linkedin.com/in/andrew-burks/\",\n  },\n  {\n    Icon: FaGithub,\n    title: \"GitHub\",\n    link: \"https://github.com/AndrewTBurks\",\n  },\n  {\n    Icon: FaTwitter,\n    title: \"Twitter\",\n    link: \"https://twitter.com/AndrewTBurks\",\n  },\n  // {\n  //   Icon: FaBlog,\n  //   title: \"Blog\",\n  //   link: \"/blog\"\n  // }\n];\n\nconst Header = ({ siteTitle, location }) => {\n  let { theme, setTheme } = useContext(ThemeContext);\n\n  let [hidden, dispatch] = useReducer((prevState, { action }) => {\n    if (action === \"show\") {\n      return false;\n    } else if (action === \"hide\") {\n      return true;\n    }\n\n    return false;\n  }, false);\n\n  useEffect(() => {\n    let scrollListener = () => {\n      if (window.scrollY < 100) {\n        dispatch({ action: \"show\" });\n      } else if (window.scrollY > 100) {\n        dispatch({ action: \"hide\" });\n      }\n    };\n\n    window.addEventListener(\"scroll\", scrollListener);\n\n    return () => window.removeEventListener(\"scroll\", scrollListener);\n  }, []);\n\n  let styles = useSpring({\n    opacity: hidden ? 0 : 1,\n  });\n\n  return (\n    <animated.header onMouseOver={() => dispatch({ action: \"show\" })}>\n      <div className='header-wrapper'>\n        <animated.div\n          className='hiding'\n          style={{\n            ...styles,\n          }}\n        >\n          <div\n            style={\n              {\n                // width: \"50%\"\n              }\n            }\n          >\n            <h2\n              style={{\n                margin: `1.45rem 1.0875rem`,\n              }}\n            >\n              <Link\n                to='/'\n                style={{\n                  color: `inherit`,\n                  textDecoration: `none`,\n                  background: \"var(--background)\",\n                  padding: 18,\n                  marginLeft: 10,\n                  borderRadius: 100,\n                }}\n              >\n                {siteTitle}\n              </Link>\n            </h2>\n          </div>\n        </animated.div>\n\n        <div style={{ marginLeft: \"auto\" }} />\n\n        {/* <RadialMenu\n          {...{\n            count: NUM_SCHEMES,\n            Icon: FaPalette,\n            theme,\n            className: i => `scheme${(i % NUM_SCHEMES) + 1}`,\n            createOption: i => {\n              // return <span style={{width: \"10px\", height: \"10px\", background: \"orange\"}}/>\n              return (\n                <div\n                  className={`radial-button ${\n                    theme === (i % NUM_SCHEMES) + 1 ? \"active\" : \"\"\n                  }`}\n                  onClick={() => setTheme((i % NUM_SCHEMES) + 1)}\n                >\n                  <IconContext.Provider\n                    value={{\n                      className: `menuIcon`,\n                      style: { marginTop: \"3px\" },\n                    }}\n                  >\n                    <FaSwatchbook />\n                  </IconContext.Provider>\n                </div>\n              );\n            },\n          }}\n        /> */}\n        <button\n          onClick={() => setTheme(t => (t === 3 ? 4 : 3))}\n          style={{ zIndex: 10, margin: \"auto 0\" }}\n        >\n          Theme\n        </button>\n\n        {/* <div style={{ marginLeft: \"5px\" }} />\n\n        <RadialMenu\n          {...{\n            count: PAGES.length,\n            Icon: FaHamburger,\n            className: () => ``,\n            theme,\n            createOption: i => {\n              let { title, link, Icon } = PAGES[i];\n\n              // console.log(title, link, Icon);\n\n              let content = (\n                <IconContext.Provider\n                  value={{\n                    className: `menuIcon`,\n                    style: { marginTop: \"3px\" },\n                  }}\n                >\n                  <Icon />\n                </IconContext.Provider>\n              );\n\n              if (link.includes(\"http\")) {\n                return (\n                  <a\n                    className={`radial-button ${\n                      globalHistory.location.pathname === link ? \"active\" : \"\"\n                    }`}\n                    href={link}\n                    disabled={true}\n                    target=\"__blank\"\n                  >\n                    {content}\n                  </a>\n                );\n              }\n\n              return (\n                <div\n                  className={`radial-button ${\n                    globalHistory.location.pathname === link ? \"active\" : \"\"\n                  }`}\n                  onClick={() => navigate(link)}\n                >\n                  {content}\n                </div>\n              );\n            },\n          }}\n        /> */}\n      </div>\n    </animated.header>\n  );\n};\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport { ThemeContext } from \"./theme-context\";\nimport Header from \"./header\";\nimport \"./layout.scss\";\nimport \"./_colors.scss\";\n\nconst Layout = ({ children, scheme, ...props }) => {\n  let { theme } = useContext(ThemeContext);\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className={`scheme${theme}`}>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `80px auto 0`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}